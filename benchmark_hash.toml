[test]
# test data
elements = [1000, 2000, 4000, 8000, 10_000, 20_000, 40_000, 80_000, 160_000, 500_000, 1_000_000]
#elements = [1000, 2000, 4000, 8000]
#elements = [1000]
element_max = 1000
rs_scale= [2.0]
rs_join_columns = [1]

# hash
hash_elements_sizes = [8, 16, 32, 64, 128, 256]
hash_algorithms = ["custom", "fnv"]


# algorithm setup
# probe
probe_build_table_loads = [0.5]
probe_build_n_per_threads = [1]
probe_build_threads = [256]
probe_prefix_n_per_threads = [1]
probe_prefix_threads = [128, 256]
probe_extract_n_per_threads = [1]
probe_extract_threads = [128]
probe_extract_x_threads = [16]

# launch
max_streams = 14
runs = 5
gpus = [ 1 ]

# results
output = "benchmark/run/local/hash/test"

[base_all]
# test data
elements = [1000, 2000, 4000, 8000, 10_000, 20_000, 40_000, 80_000, 160_000, 500_000, 1_000_000]
#elements = [1000, 2000, 4000, 8000]
#elements = [1000]
element_max = 1000
rs_scale= [2.0]
rs_join_columns = [1]

# hash
hash_elements_sizes = [8, 16, 32, 64, 128, 256]
hash_algorithms = ["custom_xor", "custom_xor_shift", "custom_mult_xor_shift", "custom_mult_xor_shift", "custom_n_mult_xor_shift", "custom_mult", "custom_mult_shift", "custom_add", "custom_add_shift", "fnv"]


# algorithm setup
# probe
probe_build_table_loads = [0.5]
probe_build_n_per_threads = [1]
probe_build_threads = [256]
probe_prefix_n_per_threads = [1]
probe_prefix_threads = [128, 256]
probe_extract_n_per_threads = [1]
probe_extract_threads = [128]
probe_extract_x_threads = [16]

# launch
max_streams = 14
runs = 5
gpus = [ 1 ]

# results
output = "benchmark/run/local/hash/vec4_4/base_all_vec4_4_1ep"